{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","contexts/initialCards.js","components/Main.js","components/Footer.js","components/Preloader.js","components/PopupWithForm.js","contexts/TextForSubmitBtn.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/PopupDeleteCard.js","components/ImagePopup.js","utils/api.js","utils/transformCard.js","components/AddPlacePopup.js","components/App.js","index.js","images/logo_mesto.svg"],"names":["Header","className","src","logoPath","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onPopupDeleteCard","onPopupImg","link","name","likes","ownerId","currentUser","useContext","isOwn","_id","cardDeleteButtonClassName","cardLikeButtonClassName","some","i","type","onClick","width","height","fill","xmlns","d","length","InitialCards","Main","onEditAvatar","onEditProfile","onAddPlace","cards","avatar","about","map","key","Footer","Preloader","PopupWithForm","title","isOpen","onClose","children","onSubmit","textSubmitBtn","noValidate","TextForSubmitBtn","textForSubmitBtn","save","confirm","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","handleChange","e","target","newName","value","newDescription","preventDefault","placeholder","minLength","maxLength","onChange","required","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","PopupDeleteCard","onCardDelete","ImagePopup","api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_handleOriginal","all","_getInitialCards","_getUserInfo","data","method","body","JSON","stringify","CardId","console","log","cardID","isLiked","authorization","transformCard","newCard","owner","AddPlacePopup","nameRef","linkRef","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isDeleteCardPopupOpen","setIsDeleteCardPopupOpen","isImgPopupOpen","setIsImgPopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","isLoading","setIsLoading","closeAllPopups","getAppInfo","initialCards","currentUserData","items","catch","err","finally","Provider","changeLikeCardStatus","newCards","c","editUserInfo","changeUserPicture","createCard","newItem","deleteCard","filter","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a80ccdab.chunk.js","sourcesContent":["import logoPath from \"../images/logo_mesto.svg\";\nimport React from \"react\";\n\nfunction Header() {\n  return(\n    <header className=\"header page__header\">\n      <picture className=\"logo header__logo\">\n        <img className=\"logo__img\" src={logoPath} alt=\"логотип\"/>\n      </picture>\n    </header>\n  );\n}\n\nexport default Header;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext({});\n","import React from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\n\n\nconst Card = ({card, onCardClick, onCardLike, onPopupDeleteCard, onPopupImg}) => {\n\n  const {link, name, likes, ownerId} = card;\n\n  //определяем владельца карточки\n  const currentUser = React.useContext(CurrentUserContext);\n  const isOwn = ownerId === currentUser._id;\n\n  //создаем className для кнопки удаления\n  const cardDeleteButtonClassName = (\n    `button ${isOwn ? 'elements__delete-button_visible' : 'elements__delete-button_hidden'}`\n  );\n\n  //проверяем лайк, поставленный текущим пользователем\n  const isLiked = likes.some(i => i._id === currentUser._id);\n  //создаем className для кнопки like\n  const cardLikeButtonClassName = isLiked ? \"button button__like button__like_active\" : \"button button__like\";\n\n  const handleCardClick = () => {\n    onPopupImg();\n    onCardClick(card);\n  }\n\n  const handleLikeClick = () => {\n    onCardLike(card);\n  }\n\n  const handleDeleteClick = () => {\n    onPopupDeleteCard();\n    onCardClick(card);\n  }\n\n\n\n  return <>\n    <li className=\"elements__item\">\n      <button type=\"button\" className={cardDeleteButtonClassName} onClick={handleDeleteClick}>\n        <svg width=\"18\" height=\"20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            d=\"M2.458 18.142c.06.67.61 1.158 1.28 1.158H14.26c.67 0 1.22-.508 1.28-1.158L16.72 5.79H1.28l1.178 12.352zM16.72 1.93h-5.14v-.65C11.58.569 11.011 0 10.3 0H7.72C7.01 0 6.44.569 6.44 1.28v.65H1.28C.569 1.93 0 2.499 0 3.21c0 .711.569 1.28 1.28 1.28h15.44c.711 0 1.28-.569 1.28-1.28 0-.711-.569-1.28-1.28-1.28z\"\n            fill=\"#fff\"/>\n        </svg>\n      </button>\n      <img src={link} alt={name} onClick={handleCardClick} className=\"elements__img\" />\n      <div className=\"elements__wrap\">\n        <h2 className=\"elements__title\">{name}</h2>\n        <div className=\"elements__container\">\n          <button type=\"button\" className={cardLikeButtonClassName} onClick={handleLikeClick}/>\n          <h3 className=\"elements__likes\">{likes.length}</h3>\n        </div>\n      </div>\n    </li>\n  </>\n}\n\nexport default Card;","import React from 'react';\n\nexport const InitialCards = React.createContext([]);\n","import React from \"react\";\nimport Card from './Card';\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { InitialCards }  from \"../contexts/initialCards\";\n\nconst Main = ({onEditAvatar, onEditProfile, onAddPlace, onCardClick, onCardLike, onPopupDeleteCard, onPopupImg }) =>  {\n  const currentUser = React.useContext(CurrentUserContext);\n  const cards = React.useContext(InitialCards);\n\n  const {avatar, about, name, } = currentUser;\n\n  return(\n    <>\n      <main className=\"page__content\">\n        <section className=\"profile page__profile\">\n          <div className=\"profile__info\">\n            <div className=\"profile__wrap\">\n              <img src={avatar} alt=\"фотография пользователя\" className=\"profile__avatar\"/>\n              <button type=\"button\" className=\"button button_edit-avatar\" onClick={onEditAvatar}>\n                <svg width=\"26\" height=\"26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path d=\"M26 3.454L6.77 22.794 3.336 19.29 22.517 0 26 3.454zM0 26l5.102-1.53-3.581-3.453L0 26z\"\n                        fill=\"#fff\"/>\n                </svg>\n              </button>\n            </div>\n            <div className=\"profile__container\">\n              <h2 className=\"profile__name\">{name}</h2>\n              <p className=\"profile__job\">{about}</p>\n              <button type=\"button\" className=\"button button_edit\" onClick={onEditProfile}></button>\n            </div>\n          </div>\n          <button type=\"button\" className=\"button button_add\" onClick={onAddPlace}></button>\n        </section>\n        <section className=\"elements\">\n          <ul className=\"elements__items\">\n            {\n              cards.map(card =>\n                  <Card\n                  card={card}\n                  key={card._id}\n                  onCardClick={onCardClick}\n                  onCardLike={onCardLike}\n                  onPopupDeleteCard={onPopupDeleteCard}\n                  onPopupImg={onPopupImg}\n                  />)\n            }\n          </ul>\n        </section>\n      </main>\n\n    </>\n  );\n}\n\nexport default Main;","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer page__footer\">\n      <p className=\"footer__copy\">&copy; 2020 Mesto Russia</p>\n    </footer>\n  );\n}\nexport default Footer;","import React from \"react\";\n\nconst Preloader = () => {\n  return (\n      <div className=\"lds-default\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n  );\n}\n\nexport default Preloader;","import React from \"react\";\n\n\nfunction PopupWithForm({name, title, isOpen, onClose, children, onSubmit, textSubmitBtn}) {\n\n  const className = `popup popup_theme_${name} ${isOpen && 'popup_opened'}`\n  return(\n    <section className={className}>\n      <div className=\"popup__container\">\n        <button type=\"button\" className=\"button popup__close\" onClick={onClose}>\n        </button>\n        <form\n          className={`popup__content popup__content_theme_${name}`}\n          noValidate\n          onSubmit={onSubmit}\n        >\n          <h2 className=\"popup__title popup__title_theme_profile\">{title}</h2>\n          <div className=\"popup__fields\">\n            {children}\n            <button type=\"submit\" className=\"button button_submit\">\n              {textSubmitBtn}\n            </button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nexport const TextForSubmitBtn = React.createContext({});\n\nexport const textForSubmitBtn = {\n  save: 'Сохранить',\n  confirm: 'Да',\n}\n\n","import PopupWithForm from './PopupWithForm'\nimport React, {useState, useEffect, useContext} from \"react\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { TextForSubmitBtn } from \"../contexts/TextForSubmitBtn\";\n\nexport const EditProfilePopup = ({isOpen, onClose, onUpdateUser}) => {\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n  const textForSubmitBtn = useContext(TextForSubmitBtn);\n\n  //при рендеренге заполняются значения о пользователи по умолчанию\n  useEffect(() => {\n    setName(currentUser.name || '');\n    setDescription(currentUser.about || '');\n  }, [currentUser]);\n\n  //обработчик событий в inputs\n  const handleChange = (e) => {\n    const target = e.target;\n\n    const newName = target.name === 'name' ? target.value : name;\n    const newDescription = target.name === 'description' ? target.value : description;\n\n    setName(newName);\n    setDescription(newDescription);\n  }\n\n  //обработчик события submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Передаём значения управляемых компонентов во внешний обработчик\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  return(\n    <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      textSubmitBtn={textForSubmitBtn.save}\n    >\n      <label className=\"popup__field\">\n        <input\n          type=\"text\"\n          className=\"popup__input popup__input_type_name\"\n          name=\"name\"\n          placeholder=\"Ваше имя\"\n          minLength=\"2\"\n          maxLength=\"40\"\n          value={name}\n          onChange={handleChange}\n          required />\n        <span className=\"popup__error\"></span>\n      </label>\n      <label className=\"popup__field\">\n        <input\n          type=\"text\"\n          className=\"popup__input popup__input_type_job\"\n          name=\"description\"\n          value={description}\n          onChange={handleChange}\n          placeholder=\"Ваша профессия\"\n          minLength=\"2\"\n          maxLength=\"200\"\n          required />\n        <span className=\"popup__error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}\n","import PopupWithForm from './PopupWithForm'\nimport React, {useContext, useRef} from \"react\";\nimport { TextForSubmitBtn } from \"../contexts/TextForSubmitBtn\";\n\nexport const EditAvatarPopup = ({isOpen, onClose, onUpdateAvatar}) => {\n\n  const avatarRef = useRef();\n  const textForSubmitBtn = useContext(TextForSubmitBtn);\n  \n  //обработчик события submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onUpdateAvatar({\n      avatar: avatarRef.current.value,\n    });\n  }\n\n  return (\n    <PopupWithForm\n      name=\"avatar\"\n      title=\"Обновить аватар\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      textSubmitBtn={textForSubmitBtn.save}\n    >\n      <label className=\"popup__field\">*/}\n        <input\n          ref={avatarRef}\n          type=\"url\"\n          className=\"popup__input popup__input_type_link\"\n          name=\"link\"\n          placeholder=\"Ссылка на картинку\"\n          required />\n        <span className=\"popup__error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}","import React, {useContext} from \"react\";\nimport PopupWithForm from './PopupWithForm'\nimport { TextForSubmitBtn } from \"../contexts/TextForSubmitBtn\";\n\nexport const PopupDeleteCard = ({card, isOpen, onClose, onCardDelete}) => {\n  const textForSubmitBtn = useContext(TextForSubmitBtn);\n\n  const handleDeleteClick = (e) => {\n    e.preventDefault();\n    onCardDelete(card);\n  }\n\n  return (\n    <PopupWithForm\n      name=\"card-delete popup__title_theme_card-delete\"\n      title=\"Вы уверены?\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleDeleteClick}\n      textSubmitBtn={textForSubmitBtn.confirm}\n    >\n      <label className=\"popup__field\">\n        <span className=\"popup__error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}","import React from \"react\";\n\nconst ImagePopup = ({card, onClose, isOpen}) => {\n\n  const link = card ? card.link : '#';\n  const name = card ? card.name : '';\n\n  const className = `popup popup_theme_image ${isOpen && 'popup_opened'}`\n  return(\n    <section className={className} >\n      <div className=\"popup__container popup__container_theme_img\">\n        <button type=\"button\" className=\"button popup__close\"\n                onClick={onClose}\n        >\n        </button>\n        <img src={link} alt={name} className=\"popup__img\" />\n        <p className=\"popup__caption\">{name}</p>\n      </div>\n    </section>\n  );\n}\n\nexport default ImagePopup;","class Api {\n  constructor({ baseUrl, headers}) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _handleOriginal(res) {\n    if (!res.ok) {\n      return Promise.reject(`Error: ${res.status}`);\n  }\n    return res.json();\n  }\n\n  _getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  _getInitialCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    })\n      .then(res => this._handleOriginal(res))\n  }\n\n  getAppInfo() {\n    return Promise.all([this._getInitialCards(), this._getUserInfo()]);\n  }\n\n  createCard(data) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  deleteCard(CardId) {\n    return fetch(`${this._baseUrl}/cards/${CardId}`, {\n      method: 'DELETE',\n      headers: this._headers,\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  changeUserPicture(avatar) {\n    console.log(avatar);\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify(avatar)\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  changeLikeCardStatus(cardID, isLiked) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\n      method: isLiked ? 'PUT' : 'DELETE',\n      headers: this._headers\n    })\n      .then(res => this._handleOriginal(res));\n  }\n\n  // deleteLikeCard(cardID) {\n  //   return fetch(`${this._baseUrl}/cards/likes/${cardID}`, {\n  //     method: 'DELETE',\n  //     headers: this._headers\n  //   })\n  //     .then(res => this._handleOriginal(res));\n  // }\n\n}\n\nconst api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-14',\n  headers: {\n    authorization: 'c543d785-697b-4b19-aa15-a606529eab61',\n    'Content-Type': 'application/json'\n  }\n});\n\nexport default api;","export const transformCard = (newCard) => {\n  return {\n    link: newCard.link,\n    likes: newCard.likes,\n    name: newCard.name,\n    _id: newCard._id,\n    ownerId: newCard.owner._id\n  }\n}","import PopupWithForm from './PopupWithForm'\nimport React, {useContext, useRef} from \"react\";\nimport {TextForSubmitBtn} from \"../contexts/TextForSubmitBtn\";\n\nexport const AddPlacePopup = ({isOpen, onClose, onAddPlace}) => {\n  const nameRef = useRef();\n  const linkRef = useRef();\n  const textForSubmitBtn = useContext(TextForSubmitBtn);\n  //обработчик события submit\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onAddPlace({\n      name: nameRef.current.value,\n      link: linkRef.current.value,\n    });\n  }\n\n  return(\n    <PopupWithForm\n      name=\"elements\"\n      title=\"Новое место\"\n      isOpen={isOpen}\n      onClose={onClose}\n      onSubmit={handleSubmit}\n      textSubmitBtn={textForSubmitBtn.save}\n    >\n\n      <label className=\"popup__field\">\n        <input\n          ref={nameRef}\n          type=\"text\"\n          className=\"popup__input popup__input_type_place\"\n          name=\"name\"\n          placeholder=\"Название\"\n          minLength=\"1\"\n          maxLength=\"30\"\n          required />\n        <span className=\"popup__error\"></span>\n      </label>\n\n      <label className=\"popup__field\">\n        <input\n          ref={linkRef}\n          type=\"url\"\n          className=\"popup__input popup__input_type_link\"\n          name=\"link\"\n          placeholder=\"Ссылка на картинку\"\n          required />\n        <span className=\"popup__error\"></span>\n      </label>\n    </PopupWithForm>\n  );\n}","import React, {useEffect, useState} from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Preloader from './Preloader';\nimport { EditProfilePopup } from './EditProfilePopup';\nimport { EditAvatarPopup } from './EditAvatarPopup';\nimport { PopupDeleteCard} from './PopupDeleteCard';\nimport ImagePopup from './ImagePopup';\nimport api from '../utils/api.js';\nimport {transformCard} from \"../utils/transformCard\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { InitialCards } from \"../contexts/initialCards\";\nimport {TextForSubmitBtn, textForSubmitBtn} from \"../contexts/TextForSubmitBtn\";\nimport { AddPlacePopup } from \"./AddPlacePopup\";\n\nfunction App() {\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isDeleteCardPopupOpen, setIsDeleteCardPopupOpen] = useState(false);\n  const [isImgPopupOpen, setIsImgPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleEditAvatarClick = () => {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  }\n\n  const handleEditProfileClick = () => {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  }\n\n  const handleAddPlaceClick = () => {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  }\n\n  const handleDeleteCardClick = () => {\n    setIsDeleteCardPopupOpen(!isDeleteCardPopupOpen);\n  }\n\n  const handleImgCardClick = () => {\n    setIsImgPopupOpen(!isImgPopupOpen);\n  }\n\n  const closeAllPopups = () => {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeleteCardPopupOpen(false);\n    setIsImgPopupOpen(false);\n    setSelectedCard(null);\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    api.getAppInfo()\n      .then(data => {\n        const [initialCards, currentUserData ] = data;\n        setCurrentUser(currentUserData);\n        const items = initialCards.map( card => transformCard(card));\n        setCards(items);\n      })\n      .catch(err => console.log(err))\n      .finally(() => setIsLoading(false));\n  }, [])\n\n  //обновляем данные пользователя\n  const handleUpdateUser = (data) => {\n    api.editUserInfo(data)\n      .then(data => {\n        setCurrentUser(data);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //обновляем автар\n  const handleUpdateAvatar = (avatar) => {\n    api.changeUserPicture(avatar)\n      .then( avatar => {\n        setCurrentUser(avatar);\n        closeAllPopups()\n      })\n      .catch(err => console.log(err))\n  }\n\n  //функция лайков и дизлайков\n  const handleCardLike = (card) => {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n      .then((newCard) => {\n\n      // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n\n      // Обновляем стейт\n      setCards(newCards)\n    })\n      .catch(err => console.log(err))\n  }\n\n  //обработчик добавления новых карточек\n  const handleAddPlaceSubmit = (newCard) => {\n    api.createCard(newCard)\n      .then(newCard => {\n        const newItem = transformCard(newCard);\n        setCards([newItem, ...cards]);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  //обработчик удаления карточек\n  const handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n      .then(() => {\n        const newCards = cards.filter(c => c._id !== card._id)\n        setCards(newCards);\n        closeAllPopups();\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <InitialCards.Provider value={cards}>\n      <CurrentUserContext.Provider value={currentUser}>\n        <div className=\"page\">\n          <Header />\n          {isLoading ?\n            <Preloader /> :\n            <Main\n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onPopupDeleteCard={handleDeleteCardClick}\n            onPopupImg={handleImgCardClick}\n            onCardClick={setSelectedCard}\n            onCardLike={handleCardLike}\n          />}\n          <Footer />\n\n          <TextForSubmitBtn.Provider value={textForSubmitBtn}>\n            <EditProfilePopup\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n              onUpdateUser={handleUpdateUser}\n            />\n\n            <EditAvatarPopup\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n              onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <AddPlacePopup\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n              onAddPlace={handleAddPlaceSubmit}\n            />\n\n            <PopupDeleteCard\n              isOpen={isDeleteCardPopupOpen}\n              onClose={closeAllPopups}\n              card={selectedCard}\n              onCardDelete={handleCardDelete}\n            />\n\n            <ImagePopup\n              isOpen={isImgPopupOpen}\n              onClose={closeAllPopups}\n              card={selectedCard}\n            />\n          </TextForSubmitBtn.Provider>\n        </div>\n      </CurrentUserContext.Provider>\n    </InitialCards.Provider>\n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/logo_mesto.e889e45f.svg\";"],"sourceRoot":""}